---
services:
  dimos:
    image: dimos:latest
    build: 
      context: ../../
      dockerfile: docker/agent/Dockerfile
    env_file:
      - ../../.env
    mem_limit: 8048m
    volumes:
      - ../../assets:/app/assets
    ports:
      - "5555:5555"
    environment:
      - PYTHONUNBUFFERED=1
    # command: [ "python", "-m", "tests.test_agent" ] 
    # ^^ Working Sanity Test Cases - Expand to Agent Class
    #
    # command: [ "python", "-m", "tests.stream.video_operators" ] 
    # ^^ Working Skeleton - Needs Impl.
    #
    # command: [ "python", "-m", "tests.stream.video_provider" ] 
    # ^^ Working Instance - Needs Tests. 
    # 
    # command: [ "python", "-m", "tests.web.edge_io" ] 
    # ^^ Working Instance - Needs Tests. 
    # 
    # command: [ "python", "-m", "tests.agent_manip_flow_flask_test" ]
    # ^^ Working Instance

    # command: [ "python", "-m", "tests.agent_manip_flow_fastapi_test" ]
    # ^^ Working Instance - Needs threading / start / stop functionality bugfix.

    # command: [ "python", "-m", "tests.test_standalone_project_out" ]
    # ^^ WIP - Output Function Headers + Descriptions

    # command: [ "python", "-m", "tests.agent_memory_test" ] 
    # ^^ WIP - Agent Memory Testing

    # command: [ "python", "-m", "tests.test_standalone_fastapi" ] 
    # ^^ Working, FastAPI Multithreader Standalone

    # command: [ "python", "-m", "tests.test_standalone_rxpy_01" ]
    # ^^ Working Instance

    # command: [ "python", "-m", "tests.test_standalone_openai_json" ]
    # ^^ Working Instance

    # command: [ "python", "-m", "tests.test_standalone_openai_json_struct" ]
    # ^^ Working Instance

    # command: [ "python", "-m", "tests.test_standalone_openai_json_struct_func" ]
    # ^^ WIP

    # command: [ "python", "-m", "tests.test_standalone_openai_json_struct_func_playground" ]
    # ^^ WIP

    # command: [ "python", "-m", "tests.test_skill_library" ]
    # ^^ Working Instance

    # command: [ "python", "-m", "tests.test_video_rtsp" ]
    # ^^ WIP

    command: [ "python", "-m", "tests.test_video_agent_threading" ]
    # ^^ WIP

    # command: ["tail", "-f", "/dev/null"]
    stdin_open: true
    tty: true

# ----
# TO RUN:
#   docker build -f ./Dockerfile -t dimos ../../ && docker compose up
# GO TO:
#   127.0.0.1:5555 (when flask server fixed)
# ----

#  video-service:
#    build: ./video-service
#    image: video-service:latest
#    volumes:
#      - ./../../assets:/app/dimos-env/assets
#    ports:
#      - "23001:23001"
